{"version":3,"sources":["components/Navigation.js","components/BotStatusCard.js","pages/Dashboard.js","components/EditModal.js","components/KeyboardWidget.js","components/AddButtonModal.js","components/AddKeyboardModal.js","components/AddModal.js","components/AddCallbackModal.js","components/EditCallbackModal.js","pages/Builder.js","pages/Stat.js","App.js","index.js"],"names":["Navigation","props","className","to","href","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","React","Component","BotStatusCard","state","bot_id","messages","numberOfTodayUsers","getMessages","bind","this","axios","get","then","resp","window","data","setState","console","log","bot_status_row","start_stop_button","bot","status","Button","fluid","color","onClick","startBotFunc","stopBotFunc","Card","Content","Header","username","id","length","extra","Dashboard","user_id","localStorage","getItem","loading","startBot","stopBot","res","post","email","password","setItem","document","location","removeItem","Segment","compact","secondary","logout","EditModal","trigger","editable","reply_text","command_without_slash","slice","commandWithoutSlash","command","handleTriggerInputChange","handleReplyTextChange","handleImageInputChange","event","c","target","value","reply_img_url","image_field","Form","Field","Input","type","defaultValue","onChange","Modal","open","Description","label","Actions","content","deleteCommandFunc","floated","closeFunc","submitFunc","primary","KeyboardWidget","buttons","showAddButtonModal","prevProps","buttons_elements","forEach","button","push","text","addButtonClickHandler","width","height","AddButtonModal","url","callback_data","handleButtonTextChange","handleUrlChange","handleCallbackDataChange","trigger_error_msg","submit_button","showTriggerInputError","pointing","labelPosition","icon","disabled","size","error","Label","style","marginLeft","AddKeyboardModal","keyboard","showImageField","showKeyboardField","toggleAddButtonModal","hideAddButtonModal","submitAddButtonModal","info","joined","concat","AddModal","image_url","showKeyboardModal","addImageField","removeImageField","addKeyboardField","removeKeyboardField","hideKeyboardModal","submitKeyboardModal","test","keyboard_field","show_image_field_button","show_keyboard_field_button","AddCallbackModal","callback_datas","callback_data_choices","name","EditCallbackModal","deleteFunc","Builder","undefined","commands","callbacks","showEditModal","editId","showAddModal","showAddCallbackModal","showEditCallbackModal","getCommands","getCallbacks","submitEditModal","closeEditModal","submitAddModal","closeAddModal","submitAddCallbackModal","closeAddCallbackModal","addCommand","addCallbackHandler","deleteCommand","csrf_token","Cookie","defaults","headers","common","command_id","editCommand","callback","editCallback","owner_id","put","reload","delete","callback_handler","command_rows","callback_rows","bot_command","List","Item","handleEditCommandClick","handleEditCallbackClick","deleteCallback","Grid","columns","relaxed","Column","class","attached","divided","verticalAlign","clearing","Icon","Stat","getTodayMessages","users","message","includes","sender_tid","Image","src","App","validUser","csrftoken","p_url","handlePassChange","login","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.58241c7a.chunk.js","sourcesContent":["import React from 'react';\n\nimport {Link} from 'react-router-dom';\n\nimport './Navigation.css'\n\n\nclass Navigation extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div className=\"navbar\">\n                <ul className=\"navbar-list\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/dashboard\">\n                            <a href=\"#\" className=\"nav-link\">\n                                <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"home\" className=\"svg-inline--fa fa-home fa-w-18\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\" d=\"M280.37 148.26L96 300.11V464a16 16 0 0 0 16 16l112.06-.29a16 16 0 0 0 15.92-16V368a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16v95.64a16 16 0 0 0 16 16.05L464 480a16 16 0 0 0 16-16V300L295.67 148.26a12.19 12.19 0 0 0-15.3 0zM571.6 251.47L488 182.56V44.05a12 12 0 0 0-12-12h-56a12 12 0 0 0-12 12v72.61L318.47 43a48 48 0 0 0-61 0L4.34 251.47a12 12 0 0 0-1.6 16.9l25.5 31A12 12 0 0 0 45.15 301l235.22-193.74a12.19 12.19 0 0 1 15.3 0L530.9 301a12 12 0 0 0 16.9-1.6l25.5-31a12 12 0 0 0-1.7-16.93z\"/></svg>\n                            </a>\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to='/builder'>\n                            <a href=\"#\" className=\"nav-link\">\n                                <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"cog\" className=\"svg-inline--fa fa-cog fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"></path></svg>\n                            </a>\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to='/stat'>\n                            <a href=\"#\" className=\"nav-link\">\n                                <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"chart-bar\" className=\"svg-inline--fa fa-chart-bar fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z\"></path></svg>\n                            </a>\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport {Button, Card, Segment} from \"semantic-ui-react\";\n\nimport axios from \"axios\";\n\n\nclass BotStatusCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {bot_id: props.bot_id, messages: [], numberOfTodayUsers: 0}\n\n        this.getMessages = this.getMessages.bind(this);\n        // setInterval(this.getNumberOfTodayMessages, 3000);\n    }\n\n    componentDidMount() {\n        this.getMessages();\n    }\n\n    getMessages() {\n        axios.get(`/api/v1/bots/${this.state.bot_id}/messages?date=today`).then(resp => {\n            window.messages = resp.data;\n            this.setState({messages: resp.data});\n            console.log(resp.data);\n        })\n    }\n\n    render() {\n        let bot_status_row;\n        let start_stop_button;\n\n        if (this.props.bot.status === 0) {\n            bot_status_row = (\n                <div className=\"bot-status-row\">\n                    <h4>Stopped</h4>\n                    <span className='red-ball'></span>\n                </div>\n            )\n\n            start_stop_button = (\n                <Button fluid color='green' onClick={this.props.startBotFunc}>\n                    Start\n                </Button>\n            )\n        } else if (this.props.bot.status === 1) {\n            bot_status_row = (\n                <div className=\"bot-status-row\">\n                    <h4>Running</h4>\n                    <span className='ok-ball'></span>\n                </div>\n            )\n\n            start_stop_button = (\n                <Button fluid color='red' onClick={this.props.stopBotFunc}>\n                    Stop\n                </Button>\n            )\n        }\n\n        return (\n            <Card color=\"red\">\n                <Card.Content>\n                    <Card.Header>{this.props.bot.username} status</Card.Header>\n                </Card.Content>\n                <Card.Content id=\"bot-status-card\">\n                    {bot_status_row}\n                    <h5>Today received: {this.state.messages.length} messages</h5>\n                    {/* <h5>Today users: {this.state.numberOfTodayUsers}</h5> */}\n                </Card.Content>\n                <Card.Content extra>\n                    {start_stop_button}\n                </Card.Content>\n            </Card>\n        )\n    }\n}\n\nexport default BotStatusCard;\n","import React from 'react';\n\nimport axios from \"axios\";\n\nimport './Dashboard.css'\nimport BotStatusCard from \"../components/BotStatusCard\";\nimport {Button, Segment} from \"semantic-ui-react\";\n\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let user_id = localStorage.getItem('user_id');\n        let bot_id = localStorage.getItem('bot_id');\n\n        this.state = {\n            bot: {},\n            loading: true,\n            user_id: user_id,\n            bot_id: bot_id,\n            messages: [],\n        }\n\n        this.startBot = this.startBot.bind(this);\n        this.stopBot = this.stopBot.bind(this);\n        this.getMessages = this.getMessages.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get(`/api/v1/bots/${this.state.bot_id}/`).then(res => {\n            console.log(res.data)\n            this.setState({bot: res.data, loading: false})\n        })\n        this.getMessages();\n    }\n\n    startBot() {\n        axios.get(`/api/v1/bots/${this.state.bot_id}/start/`).then(res => {\n            console.log(res.data)\n            this.setState({bot: res.data})\n        })\n    }\n\n    stopBot() {\n        axios.get(`/api/v1/bots/${this.state.bot_id}/stop/`).then(res => {\n            this.setState({bot: res.data})\n        })\n    }\n\n    getMessages() {\n        axios.get(`/api/v1/bots/${this.state.bot_id}/messages?date=today`).then(resp => {\n            window.messages = resp.data;\n            this.setState({messages: resp.data});\n            console.log(resp.data);\n        })\n    }\n\n    login() {\n        axios.post('/api/v1/login/', {\n            email: 'brebiv@gmail.com',\n            password: '10891089'\n        }).then(resp => {\n            localStorage.setItem('user_id', resp.data.user_id);\n            localStorage.setItem('bot_id', resp.data.bot_id);\n            document.location.href = '/dashboard';\n        })\n    }\n\n    logout() {\n        axios.get('/api/v1/logout/').then(resp => {\n            console.log(resp.data)\n            localStorage.removeItem('user_id');\n            localStorage.removeItem('bot_id');\n            document.location.href = '/';\n        })\n    }\n\n    render() {\n        return(\n            <main>\n                <Segment compact secondary>\n                    <h1>Dashboard</h1>\n                    {/*<Button onClick={() => this.login()}>Login</Button>*/}\n                    <Button onClick={() => this.logout()}>Logout</Button>\n                </Segment>\n                {this.state.loading\n                    ? <h1>Loading</h1>\n                    : <BotStatusCard bot={this.state.bot} startBotFunc={this.startBot} stopBotFunc={this.stopBot} bot_id={this.state.bot_id} />\n                }\n            </main>\n        )\n    }\n}\n\nexport default Dashboard;\n","import React from 'react';\n\nimport {Modal, Button, Header, Input, Form} from \"semantic-ui-react\";\n\n\nclass EditModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let trigger = props.editable.trigger;\n        let reply_text = props.editable.reply_text;\n        let command_without_slash = trigger.slice(1);\n\n        this.state = {\n            commandWithoutSlash: command_without_slash,\n            trigger: trigger,\n            reply_text: reply_text,\n            command: props.editable,\n        };\n\n        this.handleTriggerInputChange = this.handleTriggerInputChange.bind(this);\n        this.handleReplyTextChange = this.handleReplyTextChange.bind(this);\n        this.handleImageInputChange = this.handleImageInputChange.bind(this);\n    }\n\n    handleTriggerInputChange(event) {\n        let c = this.state.command;\n        c.trigger = '/' + event.target.value;\n        this.setState({command: c});\n    }\n\n    handleReplyTextChange(event) {\n        let c = this.state.command;\n        c.reply_text = event.target.value;\n        this.setState({command: c});\n    }\n    \n    handleImageInputChange(event) {\n        let c = this.state.command;\n        c.reply_img_url = event.target.value;\n        this.setState({command: c});\n    }\n\n    render() {\n\n        let image_field = '';\n\n        if (this.state.command.reply_img_url) {\n            image_field = (\n                <Form.Field>\n                    <label>Image url</label>\n                    <Input type='url' defaultValue={this.state.command.reply_img_url}  onChange={this.handleImageInputChange}/>\n                </Form.Field>\n            )\n        } \n\n        return (\n            <Modal open>\n                <Modal.Header>Edit</Modal.Header>\n                <Modal.Content>\n                    <Modal.Description>\n                        {/*<Input type='text' label='Trigger' defaultValue={this.props.editable.trigger} />*/}\n                        <Form>\n                            <Form.Field>\n                                <label>Trigger</label>\n                                <Input type='text' label='/' defaultValue={this.state.commandWithoutSlash}  onChange={this.handleTriggerInputChange}/>\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Response</label>\n                                <Input type='text' defaultValue={this.state.reply_text} onChange={this.handleReplyTextChange} />\n                            </Form.Field>\n                            {image_field}\n                        </Form>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button\n                        content=\"Delete\"\n                        onClick={() => this.props.deleteCommandFunc(this.state)}\n                        // positive\n                        color='red'\n                        floated='left'\n                    />\n                    <Button color='black' onClick={this.props.closeFunc}>\n                        Close\n                    </Button>\n                    <Button\n                        content=\"Change\"\n                        onClick={() => this.props.submitFunc(this.state)}\n                        // positive\n                        primary\n                    />\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\nexport default EditModal;\n","import React from 'react';\nimport './keyboard.css';\n\nclass KeyboardWidget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            buttons: props.buttons,\n            showAddButtonModal: false,\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        // For re-rendering every time props change\n        if(prevProps.buttons !== this.props.buttons) {\n            this.setState({buttons: this.props.buttons});\n        }\n    }\n\n    render() {\n        let buttons_elements = [];\n\n        this.state.buttons.forEach(button => {\n            buttons_elements.push((\n                <div className=\"keyboard-button\">\n                    <p className=\"button-text\">{button.text}</p>\n                </div>\n            ))\n        })\n\n        return (\n            <div className=\"keyboard-wrapper\">\n                <div className=\"keyboard-selector\">\n                    {buttons_elements}\n                    {/*<div className=\"keyboard-button\">*/}\n                    {/*    <p className=\"button-text\">Click me</p>*/}\n                    {/*</div>*/}\n                    <div className=\"keyboard-button\" id=\"add-button\" onClick={this.props.addButtonClickHandler}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                            <path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/>\n                        </svg>\n                    </div>\n                    {/*<div className=\"keyboard-button\">*/}\n                    {/*    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">*/}\n                    {/*        <path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/>*/}\n                    {/*    </svg>*/}\n                    {/*</div>*/}\n                    {/*<div className=\"keyboard-button\">*/}\n                    {/*    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">*/}\n                    {/*        <path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/>*/}\n                    {/*    </svg>*/}\n                    {/*</div>*/}\n                    {/*<div className=\"keyboard-button\"></div>*/}\n                    {/*<div className=\"keyboard-button\"></div>*/}\n                    {/*<div className=\"keyboard-button\"></div>*/}\n                    {/*<div className=\"keyboard-button\"></div>*/}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default KeyboardWidget\n","import React from 'react';\n\nimport {Modal, Button, Form, Input, Label, Container} from \"semantic-ui-react\";\n\n\nclass AddButtonModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {text: '', url: '', callback_data: ''};\n\n        this.handleButtonTextChange = this.handleButtonTextChange.bind(this);\n        this.handleUrlChange = this.handleUrlChange.bind(this);\n        this.handleCallbackDataChange = this.handleCallbackDataChange.bind(this);\n    }\n\n    handleButtonTextChange(event) {\n        this.setState({text: event.target.value});\n    }\n    handleUrlChange(event) {\n        this.setState({url: event.target.value});\n    }\n    handleCallbackDataChange(event) {\n        this.setState({callback_data: event.target.value});\n    }\n\n    render() {\n\n        let trigger_error_msg;\n        if (this.state.showTriggerInputError) {\n            trigger_error_msg = { content: 'MY ERROR', pointing: 'below' };\n        }\n\n        let submit_button;\n\n        if (this.state.text === '' || this.state.callback_data === '') {\n            submit_button = (\n                <Button\n                    content=\"Add\"\n                    labelPosition='right'\n                    icon='checkmark'\n                    disabled\n                    // positive\n                    primary\n                />\n            )\n        } else {\n            submit_button = (\n                <Button\n                    content=\"Add\"\n                    labelPosition='right'\n                    icon='checkmark'\n                    onClick={() => this.props.submitFunc(this.state)}\n                    // positive\n                    primary\n                />\n            )\n        }\n\n        return (\n            <div>\n                <Modal open size={'small'}>\n                    <Modal.Header>Add button</Modal.Header>\n                    <Modal.Content>\n                        <Modal.Description>\n                            <Form>\n                                <Form.Field error={trigger_error_msg}>\n                                    <label>Button text</label>\n                                    <Input type='text' onChange={this.handleButtonTextChange}/>\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>URL<Label style={{marginLeft: '1rem'}} color='purple'>Optional</Label></label>\n                                    <Input type='url' onChange={this.handleUrlChange} />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Callback data</label>\n                                    <Input type='text' onChange={this.handleCallbackDataChange} />\n                                </Form.Field>\n                                {/*{image_field}*/}\n                                {/*{keyboard_field}*/}\n                                <Form.Field>\n                                    {/*{show_image_field_button}*/}\n                                    {/*{show_keyboard_field_button}*/}\n                                </Form.Field>\n                            </Form>\n                        </Modal.Description>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button color='black' onClick={this.props.closeFunc}>\n                            Close\n                        </Button>\n                        {submit_button}\n                    </Modal.Actions>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default AddButtonModal;\n","import React from 'react';\n\nimport {Modal, Button, Form, Input, Grid} from \"semantic-ui-react\";\nimport KeyboardWidget from \"./KeyboardWidget\";\nimport AddButtonModal from \"./AddButtonModal\";\n\n\nclass AddKeyboardModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let test_buttons = {\n            buttons: [\n                // {\n                //     \"text\": \"Hey\",\n                //     \"url\": \"\",\n                //     \"callback_data\": \"test\"\n                // }\n            ]\n        }\n\n        this.state = {keyboard: null,\n            buttons: test_buttons.buttons,\n            showTriggerInputError: false,\n            showImageField: false,\n            showKeyboardField: false,\n            showAddButtonModal: false,\n        };\n\n        this.toggleAddButtonModal = this.toggleAddButtonModal.bind(this);\n        this.showAddButtonModal = this.showAddButtonModal.bind(this);\n        this.hideAddButtonModal = this.hideAddButtonModal.bind(this);\n        this.submitAddButtonModal = this.submitAddButtonModal.bind(this);\n    }\n\n    toggleAddButtonModal(state) {\n        if (state === true) {\n            this.setState({showAddButtonModal: true});\n        } else if (state === false) {\n            this.setState({showAddButtonModal: false});\n        }\n    }\n\n    showAddButtonModal() {\n        this.setState({showAddButtonModal: true});\n    }\n    hideAddButtonModal() {\n        this.setState({showAddButtonModal: false});\n    }\n\n    submitAddButtonModal(data) {\n        let button = {\n            text: data.text,\n            url: data.url,\n            callback_data: data.callback_data\n        }\n        console.info(button);\n        let joined = this.state.buttons.concat(button);\n        console.info(joined)\n        this.setState({buttons: joined})\n        this.hideAddButtonModal();\n    }\n\n    render() {\n        let submit_button;\n\n        if (this.state.buttons.length <= 0) {\n            submit_button = (\n                <Button\n                    content=\"Save\"\n                    labelPosition='right'\n                    icon='checkmark'\n                    disabled\n                    // onClick={() => this.props.submitFunc(this.state)}\n                    // positive\n                    primary\n                />\n            )\n        } else if (this.state.buttons.length > 0) {\n            submit_button = (\n                <Button\n                    content=\"Save\"\n                    labelPosition='right'\n                    icon='checkmark'\n                    onClick={() => this.props.submitFunc(this.state)}\n                    // positive\n                    primary\n                />\n            )\n        }\n\n        return (\n            <div>\n                {this.state.showAddButtonModal && <AddButtonModal closeFunc={this.hideAddButtonModal} submitFunc={this.submitAddButtonModal}/>}\n\n                <Modal open size={'small'}>\n                <Modal.Header>Add keyboard</Modal.Header>\n                <Modal.Content>\n                    <KeyboardWidget buttons={this.state.buttons} addButtonClickHandler={this.showAddButtonModal} />\n                    {/*<Grid columns={4}>*/}\n                    {/*    <Grid.Row>*/}\n                    {/*        <Grid.Column className=\"no-padding\">*/}\n                    {/*            <Button basic fluid>Click me</Button>*/}\n                    {/*        </Grid.Column>*/}\n                    {/*        <Grid.Column>*/}\n                    {/*            <Button>Do mot</Button>*/}\n                    {/*        </Grid.Column>*/}\n                    {/*        <Grid.Column>*/}\n                    {/*            <Button>Do mot</Button>*/}\n                    {/*        </Grid.Column>*/}\n                    {/*        <Grid.Column>*/}\n                    {/*            <Button>Do mot</Button>*/}\n                    {/*        </Grid.Column>*/}\n                    {/*    </Grid.Row>*/}\n                    {/*    <Grid.Row>*/}\n                    {/*        <Grid.Column>*/}\n                    {/*            <Button>Click me</Button>*/}\n                    {/*        </Grid.Column>*/}\n                    {/*        <Grid.Column>*/}\n                    {/*            <Button fluid>Do mot</Button>*/}\n                    {/*        </Grid.Column>*/}\n                    {/*        <Grid.Column>*/}\n                    {/*            <Button>Do mot</Button>*/}\n                    {/*        </Grid.Column>*/}\n                    {/*    </Grid.Row>*/}\n                    {/*</Grid>*/}\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button color='black' onClick={this.props.closeFunc}>\n                        Close\n                    </Button>\n                    {submit_button}\n                </Modal.Actions>\n            </Modal>\n            </div>\n        )\n    }\n}\n\nexport default AddKeyboardModal;\n","import React from 'react';\n\nimport {Modal, Button, Form, Input} from \"semantic-ui-react\";\nimport AddKeyboardModal from \"./AddKeyboardModal\";\n\n\nclass AddModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {trigger: '', reply_text: '', image_url: '', keyboard: null,\n            buttons: [],\n            showTriggerInputError: false,\n            showImageField: false,\n            showKeyboardField: false,\n            showKeyboardModal: false,\n        };\n\n        this.handleTriggerInputChange = this.handleTriggerInputChange.bind(this);\n        this.handleReplyTextChange = this.handleReplyTextChange.bind(this);\n        this.handleImageInputChange = this.handleImageInputChange.bind(this);\n        this.addImageField = this.addImageField.bind(this);\n        this.removeImageField = this.removeImageField.bind(this);\n        this.addKeyboardField = this.addKeyboardField.bind(this);\n        this.removeKeyboardField = this.removeKeyboardField.bind(this);\n        this.showKeyboardModal = this.showKeyboardModal.bind(this);\n        this.hideKeyboardModal = this.hideKeyboardModal.bind(this);\n        this.submitKeyboardModal = this.submitKeyboardModal.bind(this);\n    }\n\n    handleTriggerInputChange(event) {\n        let trigger_regex=/^[a-zA-Z0-9]+$/;\n\n        if (trigger_regex.test(event.target.value)) {\n            this.setState({trigger: event.target.value});\n            this.setState({showTriggerInputError: false})\n            console.log(\"TRUE\")\n        } else {\n            this.setState({trigger: event.target.value});\n            this.setState({showTriggerInputError: true})\n            console.log(\"FALSE\")\n        }\n    }\n\n    handleImageInputChange(event) {\n        this.setState({image_url: event.target.value});\n    }\n\n    handleReplyTextChange(event) {\n        this.setState({reply_text: event.target.value});\n    }\n\n    addImageField() {\n        this.setState({showImageField: true})\n    }\n\n    removeImageField() {\n        this.setState({showImageField: false, image_url: ''})\n    }\n\n    addKeyboardField() {\n        // console.log(this);\n        this.setState({showKeyboardField: true});\n    }\n\n    removeKeyboardField() {\n        this.setState({showKeyboardField: false, keyboard: null, buttons: []});\n    }\n\n    showKeyboardModal() {\n        this.setState({showKeyboardModal: true});\n    }\n\n    hideKeyboardModal() {\n        this.setState({showKeyboardModal: false});\n    }\n\n    submitKeyboardModal(data) {\n        this.addKeyboardField();\n        this.hideKeyboardModal();\n        console.info(data);\n        this.setState({buttons: data.buttons})\n    }\n\n    render() {\n\n        let trigger_error_msg;\n        if (this.state.showTriggerInputError) {\n            trigger_error_msg = { content: 'MY ERROR', pointing: 'below' };\n        }\n\n        let submit_button;\n\n        if (this.state.showTriggerInputError || this.state.reply_text === '') {\n            submit_button = (\n                <Button\n                    content=\"Add\"\n                    labelPosition='right'\n                    icon='checkmark'\n                    disabled\n                    // positive\n                    primary\n                />\n            )\n        } else if (!this.state.showTriggerInputError && this.state.reply_text !== '') {\n            submit_button = (\n                <Button\n                    content=\"Add\"\n                    labelPosition='right'\n                    icon='checkmark'\n                    onClick={() => this.props.submitFunc(this.state)}\n                    // positive\n                    primary\n                />\n            )\n        }\n\n        let image_field = '';\n\n        if (this.state.showImageField) {\n            image_field = (\n                <Form.Field>\n                    <label>Image url</label>\n                    <Input type='url' defaultValue={this.state.image_url}  onChange={this.handleImageInputChange}/>\n                </Form.Field>\n            )\n        }\n\n        let keyboard_field = '';\n\n        if (this.state.showKeyboardField) {\n            keyboard_field = (\n                <Form.Field>\n                    <Button\n                        content=\"Edit keyboard\"\n                        labelPosition='right'\n                        icon='keyboard'\n                        onClick={() => console.info(\"Soon\")}\n                        color='teal'\n                        // secondary\n                    />\n                </Form.Field>\n            )\n        }\n\n        let show_image_field_button = (\n            <Button\n                content=\"Add image\"\n                labelPosition='right'\n                icon='image'\n                onClick={this.addImageField}\n                // positive\n                primary\n            />\n        )\n\n        let show_keyboard_field_button = (\n            <Button\n                content=\"Add keyboard\"\n                labelPosition='right'\n                icon='keyboard'\n                onClick={() => {\n                    this.showKeyboardModal();\n                }\n                }\n                // positive\n                primary\n            />\n        )\n\n        if (this.state.showImageField) {\n            show_image_field_button = (<Button\n                content=\"Remove image\"\n                labelPosition='right'\n                icon='image'\n                onClick={this.removeImageField}\n                // positive\n                primary\n            />)\n        }\n\n        if (this.state.showKeyboardField) {\n            show_keyboard_field_button = (\n                <Button\n                    content=\"Remove keyboard\"\n                    labelPosition='right'\n                    icon='keyboard'\n                    onClick={this.removeKeyboardField}\n                    // positive\n                    primary\n                />\n            )\n        }\n\n        return (\n            <div>\n                {this.state.showKeyboardModal && <AddKeyboardModal submitFunc={this.submitKeyboardModal} closeFunc={this.hideKeyboardModal}/>}\n                <Modal open>\n                <Modal.Header>Add</Modal.Header>\n                <Modal.Content>\n                    <Modal.Description>\n                        <Form>\n                            <Form.Field error={trigger_error_msg}>\n                                <label>Trigger</label>\n                                <Input type='text' label='/' defaultValue={this.state.commandWithoutSlash}  onChange={this.handleTriggerInputChange}/>\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Response</label>\n                                <Input type='text' defaultValue={this.state.reply_text} onChange={this.handleReplyTextChange} />\n                            </Form.Field>\n                            {image_field}\n                            {keyboard_field}\n                            <Form.Field>\n                                {show_image_field_button}\n                                {show_keyboard_field_button}\n                            </Form.Field>\n                        </Form>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button color='black' onClick={this.props.closeFunc}>\n                        Close\n                    </Button>\n                    {submit_button}\n                </Modal.Actions>\n            </Modal>\n            </div>\n        )\n    }\n}\n\nexport default AddModal;\n","import React from 'react';\n\nimport {Modal, Button, Form, Input, Dropdown} from \"semantic-ui-react\";\n\n\nclass AddCallbackModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {trigger: '', reply_text: '', image_url: '',\n            callback_datas: props.callback_datas,\n            showTriggerInputError: false,\n            showImageField: false,\n            showKeyboardField: false,\n            showKeyboardModal: false,\n        };\n\n        console.log(props.callback_datas);\n\n        this.handleTriggerInputChange = this.handleTriggerInputChange.bind(this);\n        this.handleReplyTextChange = this.handleReplyTextChange.bind(this);\n        this.handleImageInputChange = this.handleImageInputChange.bind(this);\n        this.addImageField = this.addImageField.bind(this);\n        this.removeImageField = this.removeImageField.bind(this);\n        this.addKeyboardField = this.addKeyboardField.bind(this);\n        this.removeKeyboardField = this.removeKeyboardField.bind(this);\n        this.showKeyboardModal = this.showKeyboardModal.bind(this);\n        this.hideKeyboardModal = this.hideKeyboardModal.bind(this);\n        this.submitKeyboardModal = this.submitKeyboardModal.bind(this);\n    }\n\n    handleTriggerInputChange(event) {\n        this.setState({trigger: event.target.value})\n    }\n\n    handleImageInputChange(event) {\n        this.setState({image_url: event.target.value});\n    }\n\n    handleReplyTextChange(event) {\n        this.setState({reply_text: event.target.value});\n    }\n\n    addImageField() {\n        this.setState({showImageField: true})\n    }\n\n    removeImageField() {\n        this.setState({showImageField: false, image_url: ''})\n    }\n\n    addKeyboardField() {\n        // console.log(this);\n        this.setState({showKeyboardField: true});\n    }\n\n    removeKeyboardField() {\n        this.setState({showKeyboardField: false, keyboard: null, buttons: []});\n    }\n\n    showKeyboardModal() {\n        this.setState({showKeyboardModal: true});\n    }\n\n    hideKeyboardModal() {\n        this.setState({showKeyboardModal: false});\n    }\n\n    submitKeyboardModal(data) {\n        this.addKeyboardField();\n        this.hideKeyboardModal();\n        console.info(data);\n        this.setState({buttons: data.buttons})\n    }\n\n    render() {\n\n        let trigger_error_msg;\n        if (this.state.showTriggerInputError) {\n            trigger_error_msg = { content: 'MY ERROR', pointing: 'below' };\n        }\n\n        let submit_button;\n\n        if (this.state.showTriggerInputError || this.state.reply_text === '') {\n            submit_button = (\n                <Button\n                    content=\"Add\"\n                    labelPosition='right'\n                    icon='checkmark'\n                    disabled\n                    // positive\n                    primary\n                />\n            )\n        } else if (!this.state.showTriggerInputError && this.state.reply_text !== '') {\n            submit_button = (\n                <Button\n                    content=\"Add\"\n                    labelPosition='right'\n                    icon='checkmark'\n                    onClick={() => this.props.submitFunc(this.state)}\n                    // positive\n                    primary\n                />\n            )\n        }\n\n        let image_field = '';\n\n        if (this.state.showImageField) {\n            image_field = (\n                <Form.Field>\n                    <label>Image url</label>\n                    <Input type='url' defaultValue={this.state.image_url}  onChange={this.handleImageInputChange}/>\n                </Form.Field>\n            )\n        }\n\n        let show_image_field_button = (\n            <Button\n                content=\"Add image\"\n                labelPosition='right'\n                icon='image'\n                onClick={this.addImageField}\n                // positive\n                primary\n            />\n        )\n\n        if (this.state.showImageField) {\n            show_image_field_button = (<Button\n                content=\"Remove image\"\n                labelPosition='right'\n                icon='image'\n                onClick={this.removeImageField}\n                // positive\n                primary\n            />)\n        }\n\n        let callback_data_choices = [];\n\n        this.state.callback_datas.forEach(data => {\n            callback_data_choices.push(<option value={data}>{data}</option>)\n        })\n\n        return (\n            <div>\n                <Modal open>\n                <Modal.Header>Add callback</Modal.Header>\n                <Modal.Content>\n                    <Modal.Description>\n                        <Form>\n                            <Form.Field error={trigger_error_msg}>\n                                <label>Trigger</label>\n                                {/* <Input type='text' defaultValue=''  onChange={this.handleTriggerInputChange}/> */}\n                                {/* <Dropdown placeholder='State' onChange={this.handleTriggerInputChange} selection options={this.state.callback_datas} /> */}\n                                <select onChange={this.handleTriggerInputChange} name=\"cars\">\n                                    {/* <option value=\"volvo\">Volvo</option>\n                                    <option value=\"saab\">Saab</option>\n                                    <option value=\"fiat\">Fiat</option>\n                                    <option value=\"audi\">Audi</option> */}\n                                    {callback_data_choices}\n                                </select>\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Response</label>\n                                <Input type='text' defaultValue={this.state.reply_text} onChange={this.handleReplyTextChange} />\n                            </Form.Field>\n                            {image_field}\n                            { /*{keyboard_field} */}\n                            <Form.Field>\n                                {show_image_field_button}\n                                {/* {show_keyboard_field_button} */}\n                            </Form.Field>\n                        </Form>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button color='black' onClick={this.props.closeFunc}>\n                        Close\n                    </Button>\n                    {submit_button}\n                </Modal.Actions>\n            </Modal>\n            </div>\n        )\n    }\n}\n\nexport default AddCallbackModal;\n","import React from 'react';\n\nimport {Modal, Button, Header, Input, Form} from \"semantic-ui-react\";\n\n\nclass EditCallbackModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let trigger = props.editable.trigger;\n        let reply_text = props.editable.reply_text;\n        let command_without_slash = trigger.slice(1);\n\n        this.state = {\n            commandWithoutSlash: command_without_slash,\n            trigger: trigger,\n            reply_text: reply_text,\n            editable: props.editable,\n        };\n\n        this.handleTriggerInputChange = this.handleTriggerInputChange.bind(this);\n        this.handleReplyTextChange = this.handleReplyTextChange.bind(this);\n        this.handleImageInputChange = this.handleImageInputChange.bind(this);\n    }\n\n    handleTriggerInputChange(event) {\n        let c = this.state.editable;\n        c.trigger = '/' + event.target.value;\n        this.setState({command: c});\n    }\n\n    handleReplyTextChange(event) {\n        let c = this.state.editable;\n        c.reply_text = event.target.value;\n        this.setState({command: c});\n    }\n    \n    handleImageInputChange(event) {\n        let c = this.state.editable;\n        c.reply_img_url = event.target.value;\n        this.setState({command: c});\n    }\n\n    render() {\n\n        let image_field = '';\n\n        if (this.state.editable.reply_img_url) {\n            image_field = (\n                <Form.Field>\n                    <label>Image url</label>\n                    <Input type='url' defaultValue={this.state.editable.reply_img_url}  onChange={this.handleImageInputChange}/>\n                </Form.Field>\n            )\n        } \n\n        return (\n            <Modal open>\n                <Modal.Header>Edit callback</Modal.Header>\n                <Modal.Content>\n                    <Modal.Description>\n                        {/*<Input type='text' label='Trigger' defaultValue={this.props.editable.trigger} />*/}\n                        <Form>\n                            <Form.Field>\n                                <label>Trigger</label>\n                                <Input type='text' label='/' defaultValue={this.state.commandWithoutSlash}  onChange={this.handleTriggerInputChange}/>\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Response</label>\n                                <Input type='text' defaultValue={this.state.reply_text} onChange={this.handleReplyTextChange} />\n                            </Form.Field>\n                            {image_field}\n                        </Form>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button\n                        content=\"Delete\"\n                        onClick={() => this.props.deleteFunc(this.state.editable)}\n                        // positive\n                        color='red'\n                        floated='left'\n                    />\n                    <Button color='black' onClick={this.props.closeFunc}>\n                        Close\n                    </Button>\n                    <Button\n                        content=\"Change\"\n                        onClick={() => this.props.submitFunc(this.state)}\n                        // positive\n                        primary\n                    />\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\nexport default EditCallbackModal;\n","import React from 'react';\n\nimport axios from \"axios\";\n\nimport {Segment, Table, List, Button, Grid, Icon, Divider} from \"semantic-ui-react\";\nimport EditModal from \"../components/EditModal\";\n\nimport './Builder.css';\nimport AddModal from \"../components/AddModal\";\nimport AddCallbackModal from \"../components/AddCallbackModal\";\nimport EditCallbackModal from \"../components/EditCallbackModal\";\nimport Cookie from \"js-cookie\";\n\n\nclass Builder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let user_id = localStorage.getItem('user_id');\n        let bot_id = localStorage.getItem('bot_id');\n\n        this.state = {\n            bot: undefined,\n            bot_id: bot_id,\n            user_id: user_id,\n            commands: [],\n            callbacks: [],\n            callback_datas: [],\n            loading: true,\n            showEditModal: false,\n            editId: undefined,\n            showAddModal: false,\n            showAddCallbackModal: false,\n            showEditCallbackModal: false\n        }\n\n        this.getCommands = this.getCommands.bind(this);\n        this.getCallbacks = this.getCallbacks.bind(this);\n        this.submitEditModal = this.submitEditModal.bind(this);\n        this.closeEditModal = this.closeEditModal.bind(this);\n        this.submitAddModal = this.submitAddModal.bind(this);\n        this.closeAddModal = this.closeAddModal.bind(this);\n        this.submitAddCallbackModal = this.submitAddCallbackModal.bind(this);\n        this.closeAddCallbackModal = this.closeAddCallbackModal.bind(this);\n        this.addCommand = this.addCommand.bind(this);\n        this.addCallbackHandler = this.addCallbackHandler.bind(this);\n        this.deleteCommand = this.deleteCommand.bind(this);\n    }\n\n    componentDidMount() {\n        this.getCommands();\n        this.getCallbacks();\n\n        if (this.state.user_id != null) {\n            let csrf_token = Cookie.get('csrftoken')\n            console.info(\"[DEBUG] Got csrf from cookie:\", csrf_token)\n            axios.defaults.headers.common['X-CSRFToken'] = csrf_token;\n        }\n    }\n\n    getCommands() {\n        axios.get(`api/v1/bots/${this.state.bot_id}/commands/`).then(resp => {\n            console.info(\"[DEBUG] getCommands resp data:\", resp.data)\n            this.setState({commands: resp.data})\n            let callback_datas = [];\n            resp.data.forEach(command => {\n                command.buttons.forEach(button => {\n                    callback_datas.push(button.callback_data);\n                })\n            });\n            this.setState({callback_datas: callback_datas});\n            console.log(\"Callback datas\", callback_datas);\n        })\n    }\n\n    getCallbacks() {\n        axios.get(`api/v1/bots/${this.state.bot_id}/callbacks`).then(resp => {\n            console.info(\"[DEBUG] getCallbacks resp data:\", resp.data)\n            this.setState({callbacks: resp.data});\n        })\n    }\n\n    getInlineKeyboardButtons(command_id) {\n        axios.get(`api/v1/commands/${command_id}/inline_buttons/`).then(data => {\n            console.log(\"DATA\", data);\n        })\n    }\n\n    handleEditCommandClick(command) {\n        // axios.post()\n        console.log(\"[DEBUG] Command to edit:\". command)\n        // console.log(command)\n        this.setState({editCommand: command, showEditModal: true})\n    }\n\n    handleEditCallbackClick(callback) {\n        console.log(\"[DEBUG] Callback to edit:\", callback);\n        this.setState({editCallback: callback, showEditCallbackModal: true});\n    }\n\n    addCommand(command) {\n        axios.post(`api/v1/bots/${this.state.bot_id}/commands/`, {\n            trigger: '/' + command.trigger,\n            reply_text: command.reply_text,\n            reply_img_url: command.image_url,\n            buttons: command.buttons,\n            bot_id: this.state.bot_id,\n            owner_id: this.state.user_id,\n        }).then(resp => {\n            let joined = this.state.commands.concat(resp.data);\n            console.info(joined);\n            this.setState({commands: joined});\n        })\n    }\n\n    editCommand(command) {\n        axios.put(`api/v1/commands/${command.id}/`, command).then(resp => {\n            window.location.reload();\n        })\n    }\n\n    // editCallback(callback) {\n    //     axios.put\n    // }\n\n    deleteCommand(command) {\n        console.log(\"[DEBUG] Delete command\");\n        console.log(command);\n        axios.delete(`api/v1/commands/${command.command.id}/`).then(resp => {\n            this.getCommands();\n            this.setState({showEditModal: false});\n        })\n    }\n\n    deleteCallback(callback) {\n        console.log(\"[DEBUG] Delete callback\", callback);\n        axios.delete(`api/v1/callbacks/${callback.id}`).then(resp => {\n            this.getCallbacks();\n            this.setState({showEditCallbackModal: false});\n        })\n    }\n\n    submitEditModal(data) {\n        console.log(\"[DEBUG] Submit edit modal\")\n        this.setState({showEditModal: false});\n        console.log(data);\n        this.editCommand(data.command);\n    }\n\n    closeEditModal() {\n        console.log(\"[DEBUG] Close edit modal\");\n        this.setState({showEditModal: false});\n    }\n\n    submitAddModal(data) {\n        console.log(\"[DEBUG] Submit add modal\")\n        this.setState({showAddModal: false});\n        console.log(data)\n        this.addCommand(data);\n    }\n\n    submitAddCallbackModal(data) {\n        console.log(\"[DEBUG] Submit add callback modal\");\n        this.setState({showAddCallbackModal: false});\n        this.addCallbackHandler(data);\n    }\n\n    closeAddModal() {\n        this.setState({showAddModal: false});\n    }\n    \n    addCallbackHandler(callback_handler) {\n        axios.post(`api/v1/bots/${this.state.bot_id}/callbacks/`, {\n            trigger: callback_handler.trigger,\n            reply_text: callback_handler.reply_text,\n            reply_img_url: callback_handler.image_url,\n            bot_id: this.state.bot_id\n        })\n    }\n\n    closeAddCallbackModal() {\n        this.setState({showAddCallbackModal: false});\n    }\n\n    render() {\n\n        let command_rows = []\n        let callback_rows = []\n\n        this.state.commands.forEach(bot_command => {\n\n            command_rows.push((\n                <List.Item>\n                    {/*<Icon name='help' />*/}\n                    <List.Content floated='right'>\n                        <Button onClick={()=>this.handleEditCommandClick(bot_command)}>Edit</Button>\n                    </List.Content>\n                    <List.Content>\n                        <h4>{bot_command.trigger}</h4>\n                    </List.Content>\n                </List.Item>\n            ))\n        })\n\n        this.state.callbacks.forEach(callback => {\n            callback_rows.push((\n                <List.Item>\n                    {/*<Icon name='help' />*/}\n                    <List.Content floated='right'>\n                        <Button onClick={()=>this.handleEditCallbackClick(callback)}>Edit</Button>\n                    </List.Content>\n                    <List.Content>\n                        <h4>{callback.trigger}</h4>\n                    </List.Content>\n                </List.Item>\n            ))\n        })\n\n        // if (command_rows.length < 0) {\n        //     command_rows = <h2>Loading</h2>\n        // }\n\n        return(\n            <main>\n                {this.state.showEditModal && <EditModal submitFunc={this.submitEditModal} closeFunc={this.closeEditModal} deleteCommandFunc={this.deleteCommand} editable={this.state.editCommand} />}\n                {this.state.showAddModal && <AddModal submitFunc={this.submitAddModal} closeFunc={this.closeAddModal} />}\n                {this.state.showAddCallbackModal && <AddCallbackModal submitFunc={this.submitAddCallbackModal} closeFunc={this.closeAddCallbackModal} callback_datas={this.state.callback_datas} />}\n                {this.state.showEditCallbackModal && <EditCallbackModal closeFunc={()=>this.setState({showEditCallbackModal: false})} deleteFunc={(callback)=>this.deleteCallback(callback)} editable={this.state.editCallback} />}\n\n                <Segment compact secondary>\n                    <h1>Builder</h1>\n                    {/*<Button onClick={() => this.login()}>Login</Button>*/}\n                    {/*<Button onClick={() => this.logout()}>Logout</Button>*/}\n                </Segment>\n                <Grid columns={2} relaxed='very' id=\"builder-grid\">\n                    <Grid.Column class=\"builder-column\">\n                        <Segment secondary attached=\"top\">\n                            <h4>Commands</h4>\n                        </Segment>\n                        <Segment attached>\n                            <List divided verticalAlign='middle' className=\"scrolling-list\">\n                                {this.state.commands.length > 0\n                                    ? command_rows\n                                    : <h2>No commands</h2>}\n                                {/*{command_rows}*/}\n                            </List>\n                        </Segment>\n                        <Segment secondary clearing attached=\"bottom\">\n                            <Button\n                                floated='right'\n                                icon\n                                labelPosition='left'\n                                primary\n                                size='small'\n                                onClick={() => this.setState({showAddModal: true})}\n                            >\n                                <Icon name='add' />Add\n                            </Button>\n                        </Segment>\n                    </Grid.Column>\n\n                    {/* CALLBACKS */}\n                    <Grid.Column>\n                        <Segment secondary attached=\"top\">\n                            <h4>Callbacks</h4>\n                        </Segment>\n                        <Segment attached>\n                            <List divided verticalAlign='middle' className=\"scrolling-list\">\n                                {this.state.callbacks.length > 0\n                                    ? callback_rows\n                                    : <h2>No callbacks</h2>}\n                            </List>\n                        </Segment>\n                        <Segment secondary clearing attached=\"bottom\">\n                            <Button\n                                floated='right'\n                                icon\n                                labelPosition='left'\n                                primary\n                                size='small'\n                                onClick={() => this.setState({showAddCallbackModal: true})}\n                            >\n                                <Icon name='add' />Add\n                            </Button>\n                        </Segment>\n                    </Grid.Column>\n                </Grid>\n            </main>\n        )\n\n    }\n}\n\nexport default Builder;\n","import React from 'react';\n\nimport axios from \"axios\";\n\nimport BotStatusCard from \"../components/BotStatusCard\";\nimport {Button, Segment, Card, Image} from \"semantic-ui-react\";\n\n\n\nclass Stat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let user_id = localStorage.getItem('user_id');\n        let bot_id = localStorage.getItem('bot_id');\n\n        this.state = {\n            bot: {},\n            loading: true,\n            user_id: user_id,\n            bot_id: bot_id,\n            messages: [],\n            numberOfTodayUsers: 0\n        }\n\n        this.getMessages = this.getTodayMessages.bind(this);\n    }\n\n    componentDidMount() {\n        this.getTodayMessages();\n    }\n\n    getTodayMessages() {\n        axios.get(`/api/v1/bots/${this.state.bot_id}/messages?date=today`).then(resp => {\n            window.messages = resp.data;\n            let messages = resp.data;\n            let users = [];\n            messages.forEach(message => {\n                if (!users.includes(message.sender_tid)) {\n                    users.push(message.sender_tid);\n                }\n            });\n            this.setState({messages: resp.data, numberOfTodayUsers: users.length});\n            console.log(resp.data);\n        })\n    }\n\n    getAllMessages() {\n        axios.get(`/api/v1/bots/${this.state.bot_id}/messages`).then(resp => {\n\n        })\n    }\n\n    render() {\n        return(\n            <main>\n                <Segment compact secondary>\n                    <h1>Statistics</h1>\n                </Segment>\n                <Card color=\"red\">\n                    <Card.Content>\n                        <Card.Header>Statistics</Card.Header>\n                    </Card.Content>\n                    <Card.Content id=\"bot-status-card\">\n                        <h5>Today received: {this.state.messages.length} messages</h5>\n                        <h5>Today users: {this.state.numberOfTodayUsers}</h5>\n                    </Card.Content>\n                    <Card.Content extra>\n                        Conclusion: You're doing fine\n                    </Card.Content>\n                </Card>\n                <Card color=\"red\">\n                    <Card.Content>\n                        <Card.Header>Statistics</Card.Header>\n                    </Card.Content>\n                    <Card.Content id=\"bot-status-card\">\n                        <Image src=\"/interactive-line-graph.png\" />\n                    </Card.Content>\n                    <Card.Content extra>\n                        Graph says everything is going great\n                    </Card.Content>\n                </Card>\n            </main>\n        )\n    }\n}\n\nexport default Stat;\n","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport './App.css';\n\nimport Navigation from \"./components/Navigation\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Builder from \"./pages/Builder\";\nimport Stat from './pages/Stat';\nimport axios from \"axios\";\nimport Cookie from 'js-cookie';\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(\"[DEBUG] App constructor\")\n\n        let user_id = localStorage.getItem('user_id')\n        this.state = {bot: undefined, user_id: user_id, validUser: false, password: ''}\n    }\n\n    componentDidMount() {\n        console.log('app mounted')\n        const csrftoken = Cookie.get('csrftoken');\n        // axios.defaults.headers.common['X-CSRFToken'] = 'XMLHttpRequest';\n        axios.defaults.headers.common['X-CSRFToken'] = csrftoken;\n        console.log(\"[DEBUG] CSRFToken: \", csrftoken);\n        window.p_url = 'https://docs.google.com/presentation/d/1icwHRx5HRxenKaI8-enVbBncDGEWzixOiL7NkqZvD5g/';\n    }\n\n    handlePassChange(event) {\n        if (event.target.value == '10891089') {\n            this.setState({validUser: true});\n            window.localStorage.setItem('validUser', 'true');\n        }\n    }\n\n    login() {\n        axios.post('/api/v1/login/', {\n            email: 'brebiv@gmail.com',\n            password: '10891089'\n        }).then(resp => {\n            localStorage.setItem('user_id', resp.data.user_id);\n            localStorage.setItem('bot_id', resp.data.bot_id);\n            document.location.href = '/dashboard';\n        })\n    }\n\n    logout() {\n        axios.get('/api/v1/logout/').then(resp => {\n            console.log(resp.data)\n        })\n    }\n\n    render() {\n        if (this.state.validUser == false && window.localStorage.getItem('validUser') == undefined) {\n            return (\n                <div>\n                    <input type='password' onChange={event => {this.handlePassChange(event)}} />\n                </div>\n            )\n        }\n\n        if (this.state.user_id == null) {\n            return (\n                <div>\n                    <h1>Not logged in</h1>\n                    <button onClick={() => this.login()}>Login</button>\n                </div>\n            )\n        }\n        return (\n            <Router>\n                <Navigation />\n                <Route path=\"/dashboard\" component={() => <Dashboard user_id={this.state.user_id} />}/>\n                <Route path='/builder' component={() => <Builder bot={this.state.bot} />} />\n                <Route path='/stat' component={() => <Stat /> } />\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}